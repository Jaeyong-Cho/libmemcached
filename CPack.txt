# options

# DEBs
if(EXISTS /usr/bin/dpkg)
    message(STATUS "Enabling Debian packages")
    set(CPACK_BINARY_DEB ON)
endif()

# BSDs
if(CMAKE_SYSTEM_NAME MATCHES BSD AND EXISTS CPackFreeBSD.txt)
    message(STATUS "Enabling FreeBSD packages")
    set(CPACK_BINARY_FREEBSD ON)
    include(CPackFreeBSD.txt)
endif()

# RPMs
if(EXISTS /usr/bin/dnf OR EXISTS /usr/bin/yum OR EXISTS /usr/bin/rpm-build)
    message(STATUS "Enabling RPM packages")
    set(CPACK_BINARY_RPM ON)
endif()

if (EXISTS CPackNSIS.txt)
    include(CPackNSIS.txt)

# shell installer
set(CPACK_BINARY_STGZ ${UNIX})

# binary archive
set(CPACK_BINARY_TBZ2 0)
set(CPACK_BINARY_TGZ ${UNIX})
set(CPACK_BINARY_TXZ 0)
set(CPACK_BINARY_TZ 0)
set(CPACK_BINARY_ZIP ${WIN32})

# source archive
set(CPACK_SOURCE_TBZ2 0)
set(CPACK_SOURCE_TGZ ${UNIX})
set(CPACK_SOURCE_TXZ 0)
set(CPACK_SOURCE_TZ 0)
set(CPACK_SOURCE_ZIP ${WIN32})

# project internals
set(CPACK_PACKAGE_VENDOR ${CMAKE_PROJECT_HOMEPAGE_URL})
set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}/${CPACK_PACKAGE_VERSION}")
set(CPACK_PACKAGE_CHECKSUM SHA1)
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README.md")

include(CPack)
